#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define NAV     1
#define NAV2    2
#define CMDTAB  3
#define SYM     4
#define NUM     5
#define MEDIA   6
#define FUNC    7
#define DEF     8
#define GAME    9

&caps_word {
  continue-list = <UNDERSCORE MINUS>;
};

/ {
  combos {
    compatible = "zmk,combos";
    combo_undo {
      timeout-ms = <50>;
      key-positions = <20 21>;
      bindings = <&kp LG(Z)>;
    };
		combo_copy {
      timeout-ms = <50>;
      key-positions = <21 22>;
      bindings = <&kp LG(C)>;
    };
		combo_cut {
      timeout-ms = <50>;
      key-positions = <22 23>;
      bindings = <&kp LA(LG(V))>;
    };
		combo_paste {
      timeout-ms = <50>;
      key-positions = <23 24>;
      bindings = <&kp LG(V)>;
    };
		combo_def {
      timeout-ms = <50>;
      key-positions = <25 26>;
      bindings = <&tog DEF>;
    };
		combo_game {
      timeout-ms = <50>;
      key-positions = <27 28>;
      bindings = <&tog GAME>;
    };
  };
};

/ {

	behaviors {
		hm: homerow_mods {
			compatible = "zmk,behavior-hold-tap";
			label = "HOMEROW_MODS";
			#binding-cells = <2>;
			tapping-term-ms = <200>;
			quick_tap_ms = <0>;
			flavor = "balanced";
			bindings = <&kp>, <&kp>;
		};
		hs: homerow_shift {
			compatible = "zmk,behavior-hold-tap";
			label = "HOMEROW_SHIFT";
			#binding-cells = <2>;
			tapping-term-ms = <175>;
			quick_tap_ms = <0>;
			flavor = "balanced";
			bindings = <&kp>, <&kp>;
		};

		// macro to activate layer 1, then release alt and move to layer 0 on key release
    mo_at: momentary_release_alt {
			compatible = "zmk,behavior-macro";
			label = "momentary_release_alt";
			#binding-cells = <0>;
			wait-ms = <0>;
			tap-ms = <0>;
			bindings = <&macro_press &mo NAV>
								, <&macro_pause_for_release>
								, <&macro_release &kp LGUI>
								, <&macro_tap &to DEFAULT>;
    };

    // use below with a dummy value for first parameter: &lta 0 RET
    lta: layer_tap_release_alttab {
			compatible = "zmk,behavior-hold-tap";
			label = "layer_tap_release_alttab";
			#binding-cells = <2>;
			flavor = "tap-preferred";
			tapping-term-ms = <200>;
			bindings = <&mo_at>, <&kp>;
    };

		cmdtab: cmd_tab_enter {
			label = "cmd_tab_enter";
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			wait-ms = <10>;
			tap-ms = <20>;
			bindings =
					<&macro_press &kp LGUI>,
					<&macro_tap &kp TAB &to CMDTAB>;
		};
		cmdtab_shift: cmd_tab_shift_enter {
			label = "cmd_tab_shift_enter";
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			wait-ms = <10>;
			tap-ms = <20>;
			bindings =
					<&macro_press &kp LGUI>,
					<&macro_tap &kp LS(TAB) &to CMDTAB>;
		};
		cmdtab_x: cmd_tab_leave {
			label = "cmd_tab_leave";
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			wait-ms = <10>;
			tap-ms = <20>;
			bindings =
					<&macro_release &kp LGUI>,
					<&macro_tap &to 0>;
		};
	};

	keymap {
		compatible = "zmk,keymap";
		default_layer {
			label = "Default";

			bindings = <
				&kp Q         &kp W         &lt MEDIA E         &lta 0 R      &kp T        	         &kp Y          &kp U               &kp I         &kp O      &kp P
				&hm LSHIFT A  &lt SYM S     &hm LC(LS(LALT)) D  &lt NAV F     &hm LC(LG(LALT)) G     &kp H          &hm LC(LS(LALT)) J  &lt NUM K     &lt SYM L  &hm RSHIFT SQT
				&kp Z   			&kp X   		  &kp C               &lt NAV2 V    &kp B           		   &kp N          &kp M               &kp COMMA     &kp DOT    &kp QMARK
								                    &hm LCTL ESC        &hm LALT TAB  &hm LGUI SPACE         &hm RGUI BSPC  &hm RALT ENTER      &lt FUNC DEL
			>;
		};

		nav_layer {
				label = "Nav";

				bindings = <
					&trans  &kp LG(Q)  &kp LG(W)  &trans   &trans     &trans           &kp HOME     &kp UP         &kp END    &trans
					&trans  &trans     &mo NAV2   &trans   &trans     &kp LG(LBKT)     &kp LEFT     &kp DOWN       &kp RIGHT  &kp LG(RBKT)
					&trans  &trans     &trans     &trans   &trans     &trans           &trans       &trans         &trans     &trans
														 &trans     &trans   &trans     &cmdtab_shift    &cmdtab      &kp LG(GRAVE)
				>;
		};

		nav2_layer {
			label = "Nav2";

			bindings = <
				&trans  &trans    &trans  &trans  &trans     &trans           &kp HOME           &kp PG_UP      &kp END            &trans
				&trans  &trans    &trans  &trans  &trans     &kp LG(LBKT)     &kp LA(LEFT)       &kp PG_DN      &kp LA(RIGHT)      &kp LG(RBKT)
				&trans  &trans    &trans  &trans  &trans     &trans           &kp LC(LG(LA(U)))  &trans         &kp LC(LG(LA(I)))  &trans
													&trans  &trans  &trans     &kp LS(LC(TAB))  &kp LC(TAB)        &kp LG(GRAVE)
			>;
		};

		cmdtab_layer {
			label = "CmdTab";

			bindings = <
				&trans  &trans  &trans  &trans  &trans      &trans       &trans        &kp LA(UP)    &trans         &trans
				&trans  &trans  &trans  &trans  &trans      &trans       &kp LA(LEFT)  &kp LA(DOWN)  &kp LA(RIGHT)  &trans
				&trans  &trans  &trans  &trans  &trans      &trans       &trans        &trans        &trans         &trans
							 	 			  &trans  &trans  &trans      &kp LS(TAB)  &kp TAB       &trans
			>;
		};

		sym_layer {
			label = "Symbols";

			bindings = <
				&kp EXCL   &kp AT    &kp HASH   &kp DLLR   &kp PRCNT     &kp CARET  &kp AMPS  &kp ASTRK  &kp GRAVE  &kp TILDE
				&kp EQUAL  &kp LT    &kp LBRC   &kp LPAR   &kp LBKT      &kp RBKT   &kp RPAR  &kp RBRC   &kp GT     &kp DQT
				&trans     &kp PLUS  &kp MINUS  &kp UNDER  &kp FSLH      &kp BSLH   &kp PIPE  &kp SEMI   &kp COLON  &trans
															&trans     &trans     &trans        &trans     &trans    &trans
			>;
		};
			
		num_layer {
			label = "Numbers";

			bindings = <
				&trans  &kp N7  &kp N8  &kp N9  &trans     &trans  &trans     &trans  &trans  &trans
				&trans  &kp N4  &kp N5  &kp N6  &trans     &trans  &kp LC(G)  &trans  &trans  &trans
				&trans  &kp N1  &kp N2  &kp N3  &trans     &trans  &trans     &trans  &trans  &trans
												&trans  &kp N0  &trans     &trans  &trans     &trans
			>;
		};

		media_layer {
			label = "Media";

			bindings = <
				&trans  &trans  &trans  &trans  &trans     &trans        &bt BT_PRV    &bt BT_NXT        &trans        &out OUT_TOG
				&trans  &trans  &trans  &trans  &trans     &trans        &kp C_PREV    &kp C_PLAY_PAUSE  &kp C_NEXT    &trans
				&trans  &trans  &trans  &trans  &trans     &bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1      &bt BT_SEL 2  &bt BT_SEL 3
												&trans  &trans  &trans     &kp C_VOL_DN  &kp C_MUTE    &kp C_VOL_UP
			>;
		};

		func_layer {
			label = "Func";

			bindings = <
				&kp F12  &kp F7  &kp F8  &kp F9  &trans     &trans  &trans  &trans  &trans  &trans
				&kp F11  &kp F4  &kp F5  &kp F6  &trans     &trans  &trans  &trans  &trans  &trans
				&kp F10  &kp F1  &kp F2  &kp F3  &trans     &trans  &trans  &trans  &trans  &trans
													&trans  &trans  &trans    &trans  &trans  &trans
				>;
		};

		def_layer {
			label = "Def";

			bindings = <
				&trans  &trans  &trans  &trans  &trans     &trans  &trans  &trans  &trans  &trans
				&kp A   &kp S   &kp D   &kp F   &trans     &trans  &kp J   &kp K   &kp L   &kp SQT
				&trans  &trans  &trans  &trans  &trans     &trans  &trans  &trans  &trans  &trans
							 	 			  &trans  &trans  &trans     &trans  &trans  &trans
			>;
		};

		game_layer {
			label = "Game";

			bindings = <
				&trans      &kp Q   &kp W   &kp E   &kp R      &trans  &trans  &trans  &trans  &trans
				&kp LSHIFT  &kp A   &kp S   &kp D   &kp F      &trans  &trans  &trans  &trans  &trans
				&trans      &trans  &trans  &kp C   &kp V      &trans  &trans  &trans  &trans  &trans
								            &trans  &trans  &trans     &trans  &trans  &trans
			>;
		};
	};
};
